import "google/protobuf/descriptor.proto";
import "common.proto";
import "topic.proto";
package atlas.content;

option java_package = "org.atlasapi.serialization.protobuf";
option java_outer_classname = "ContentProtos";
option optimize_for = SPEED;

enum Column {
    IDENT = 0;
    DESC = 1;
    BROADCASTS = 2;
    LOCATIONS = 3;
    CHILDREN = 4;
    PEOPLE = 5;
    CLIPS = 6;
    KEYPHRASES = 7;
    TOPICS = 8;
    LINKS = 9;
    GROUPS = 10;
    SEGMENTS = 11;
    SECONDARY = 12;
    CHILD_UPDATED = 13;
    TYPE = 14;
    SOURCE = 15;
}

extend google.protobuf.FieldOptions {
  optional Column column = 50002;
}

message Content {
    optional int64 id = 1 [(column)=IDENT];
    repeated common.Alias aliases = 49 [(column)=IDENT];
    repeated common.Reference equivs = 50 [(column)=IDENT];
    optional common.DateTime first_seen = 51 [(column)=IDENT];
    optional common.DateTime last_updated = 52 [(column)=IDENT];
    optional string uri = 53 [(column)=IDENT];
    optional common.Reference container_ref = 8 [(column)=IDENT];
    optional common.Reference series_ref = 9 [(column)=IDENT];
    optional bool schedule_only = 42 [(column)=IDENT];

    optional string source = 47 [(column)=SOURCE];

    optional string type = 48 [(column)=TYPE];

    optional common.DateTime child_last_updated = 46 [(column)=CHILD_UPDATED];

    repeated common.LocaleString titles = 2 [(column)=DESC];
    optional string description = 38 [(column)=DESC];
    repeated Synopsis synopses = 3 [(column)=DESC];
    optional string image = 40 [(column)=DESC];
    optional string thumb = 41 [(column)=DESC];
    repeated Image images = 4 [(column)=DESC];
    optional string media_type = 5 [(column)=DESC];
    optional string specialization = 6 [(column)=DESC];
    optional string sort_key = 7 [(column)=DESC];

    repeated common.Reference children = 10  [(column)=CHILDREN];
    repeated common.Reference secondaries = 45 [(column)=SECONDARY];
    repeated Version versions = 11;
    repeated Broadcast broadcasts = 12 [(column)=BROADCASTS];
    repeated Encoding encodings = 13  [(column)=LOCATIONS];

    optional int32 series_number = 16 [(column)=DESC];
    optional int32 episode_number = 17 [(column)=DESC];
    optional int32 part_number = 18 [(column)=DESC];
    optional int32 total_episodes = 19 [(column)=DESC];
    optional bool longform = 20 [(column)=DESC];
    optional bool black_and_white = 21 [(column)=DESC];
    optional string presentation_channel = 23 [(column)=DESC];
    repeated string countries = 22 [(column)=DESC];
    optional int32 year = 30 [(column)=DESC];
    repeated string language = 31 [(column)=DESC];
    optional string isrc = 35 [(column)=DESC];
    optional int64 duration = 36 [(column)=DESC];
    repeated string genres = 39 [(column)=DESC];
    optional Summary container_summary = 43 [(column)=DESC];
    optional string website_url = 44 [(column)=DESC];

    repeated Content clips = 24 [(column)=CLIPS];
    repeated KeyPhrase key_phrases = 25 [(column)=KEYPHRASES];
    repeated RelatedLink related_link = 26 [(column)=LINKS];
    repeated TopicRef topic_refs = 27  [(column)=TOPICS];
    repeated common.Reference content_groups = 29 [(column)=GROUPS];
    repeated CrewMember crew_members = 28  [(column)=PEOPLE];
    repeated Certificate certificates = 32 [(column)=DESC];
    repeated Subtitle subtitles = 33  [(column)=DESC];
    repeated ReleaseDate release_dates = 34 [(column)=DESC];
    repeated SegmentEvent segment_events = 37 [(column)=SEGMENTS];
}

message Summary {
    optional string type = 1;
    optional string title = 2;
    optional string description = 3;
    optional int32 position = 4;
}

message Broadcast {
    optional common.Identification identification = 1;
    optional common.DateTime transmission_time = 2;
    optional common.DateTime transmission_end_time = 3;
    optional common.Reference channel = 4;
    optional common.DateTime schedule_date = 5;
    optional string source_id = 19;
    optional string version = 17;
    optional bool actively_published = 6;
    optional bool repeat = 7;
    optional bool subtitled = 8;
    optional bool signed = 9;
    optional bool audio_described = 10;
    optional bool high_definition = 11;
    optional bool widescreen = 12;
    optional bool surround = 13;
    optional bool live = 14;
    optional bool new_series = 15;
    optional bool premiere = 16;
    optional string channel_uri = 18;
}

message Encoding {
    repeated Location location = 1;
    optional string version = 20;
    optional string video_coding = 2;
    optional string audio_coding = 3;
    optional int32 bit_rate = 4;
    optional int32 audio_bit_rate = 5;
    optional int32 video_bit_rate = 6;
    optional string video_aspect_ratio = 7;
    optional float video_frame_rate = 8;
    optional int32 audio_channels = 9;
    optional string data_container_format = 10;
    optional int64 data_size = 12;
    optional string distributor = 11;
    optional bool has_dog = 13;
    optional string source = 14;
    optional int32 video_horizontal_size = 15;
    optional bool video_progressive_scan = 16;
    optional int32 video_vertical_size = 17;
    optional bool contains_advertising = 18;
    optional int32 advertising_duration = 19;
}

message Location {
    optional string uri = 1;
    optional common.DateTime availability_start = 2;
    optional common.DateTime availability_end = 3;
    optional int32 availability_length = 17;
    optional string transport_type = 4;
    repeated string available_countries = 5;
    optional string revenue_contract = 6;
    optional string transport_sub_type = 7;
    optional int32 amount = 8;
    optional string currency = 9;
    optional string network = 10;
    optional string platform = 11;
    optional bool transport_is_live = 12;
    optional string embed_code = 13;
    optional string embed_id = 14;
    optional common.DateTime actual_availability_start = 15;
    optional common.DateTime drm_playable_from = 16;
}

message SegmentEvent {
    optional string segment = 10;
    optional string version = 9;
    optional string uri = 1;
    optional int32 position = 2;
    optional int64 offset = 3;
    optional bool chapter = 4;
    optional string title = 5;
    optional string description = 6;
    optional string image = 7;
    optional string thumbnail = 8;
}

message Synopsis {
    optional string short = 1;
    optional string medium = 2;
    optional string long = 3;
    optional string locale = 4;
}

message Version {
    optional string id = 1;
    optional int32 published_duration = 2;
    optional int32 duration = 3;
    optional bool restricted = 4;
    optional int32 minimum_age = 5;
    optional string restriction_message = 6;
    optional bool is_three_d = 7;
}

message Image {
    optional string uri = 1;
    optional int32 height = 2;
    optional int32 width = 3;
    optional string type = 4;
    optional string caption = 5;
    optional string copyright = 6;
    optional common.DateTime availability_start = 7;
    optional common.DateTime availability_end = 8;
}

message KeyPhrase {
    optional string phrase = 1;
    optional double weighting = 2;
}

message RelatedLink {
    optional string type = 1;
    optional string url = 2;
    optional string sourceId = 3;
    optional string shortName = 4;
    optional string title = 5;
    optional string description = 6;
    optional string image = 7;
    optional string thumbnail = 8;
}

message CrewMember {
    optional string uri = 1;
    optional string name = 3;
    repeated string profile_links = 2;
    optional string role = 4;
    optional string character = 5;
}

message Certificate {
    optional string country = 1;
    optional string classification = 2;
}

message Subtitle {
    optional string language = 1;
}

message ReleaseDate {
    optional common.DateTime date = 1;
    optional string country = 2;
    optional string type = 3;
}

message TopicRef {
    optional topic.Topic topic = 1;
    optional float weighting = 2;
    optional bool supervised = 3;
    optional string relationship = 4;
    optional int32 offset = 5;
}